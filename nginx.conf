# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        server_name  ludowizard.com www.ludowizard.com;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        error_page 404 /404.html;
        location = /404.html {
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        }

    location /backend {
        proxy_pass https://ludowizard.com:5010;
        # Other proxy settings...
    }

    location /backendSocket {
        proxy_pass https://ludowizard.com:7001;
        # Other proxy settings...
    }
    location /admin {
         alias /usr/share/nginx/admin;
         try_files $uri $uri/ /admin/index.html;
    }
       
  location / {
        try_files $uri /index.html;
    }
    
    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/ludowizard.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/ludowizard.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}



    server {
    if ($host = ludowizard.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen       80;
        listen       [::]:80;
        server_name  ludowizard.com www.ludowizard.com;
    return 404; # managed by Certbot


}

server {
    server_name api.ludowizard.com; 

    location / {
        proxy_pass http://3.109.107.87:5010;  # Assuming your backend is running on localhost:5010
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Additional SSL and security configurations can be added here


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/api.ludowizard.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/api.ludowizard.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    server_name socket.ludowizard.com; 

    location / {
        proxy_pass http://3.109.107.87:7001;  # Assuming your backend is running on localhost:5010
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/socket.ludowizard.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/socket.ludowizard.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}




server {
    if ($host = api.ludowizard.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name api.ludowizard.com;
    listen 80;
    return 404; # managed by Certbot


}

server {
    if ($host = socket.ludowizard.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name socket.ludowizard.com;
    listen 80;
    return 404; # managed by Certbot


}}